@model CrdlSys.ViewModels.ManageRCBAEventsPageViewModel

@{
    ViewData["Title"] = "Manage RCBA Events";
    Layout = "_LayoutManageEvent";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<head>
    <link rel="stylesheet" href="~/css/ChiefManageRCBAEvents.css" asp-append-version="true">
</head>

<body>
    <!--Open Registration Events-->
    <div class="title-section">
        <h1 class="title">Open Registration Events</h1>
    </div>
    <div class="row1">
        @if (Model.OpenRegistrationEvents != null && Model.OpenRegistrationEvents.Any())
        {
            foreach (var researchEvent in Model.OpenRegistrationEvents.Where(e => !e.IsArchived && e.EventStatus == "Scheduled"))
            {
                <div class="col-md-4 mb-4">
                    <div class="card event-card" data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)" style="cursor: pointer;">
                        @if (researchEvent.EventThumbnail != null && researchEvent.EventThumbnail.Length > 0)
                        {
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(researchEvent.EventThumbnail)" class="card-img-top" alt="@(researchEvent.EventName ?? "Event")" />
                        }
                        else
                        {
                            <img src="~/images/BG-Header.png" class="card-img-top" alt="Default Background Header" />
                        }
                        <div class="card-body">
                            <h5 class="card-title">@(researchEvent.EventName ?? "Unnamed Event")</h5>
                            <p class="card-text">@(researchEvent.EventType ?? "Unspecified Type")</p>
                            <p class="card-text">Participant Slots: @(researchEvent.ParticipantsSlot)</p>
                            <button class="btn btn-info" type="button"
                                    data-bs-toggle="modal"
                                    data-bs-target="#registeredParticipantsModal"
                                    data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)"
                                    onclick="stopPropagation(event);">
                                View Registered Participants
                            </button>

                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <p class="alert-container">No open registration events found.</p>
            </div>
        }
    </div>

    <!--Invitational Events-->
    <div class="title-section">
        <h1 class="title">Invitational Events</h1>
    </div>
    <div class="row2">
        @if (Model.InvitationalEvents != null && Model.InvitationalEvents.Any())
        {
            foreach (var researchEvent in Model.InvitationalEvents.Where(e => !e.IsArchived))
            {
                <div class="col-md-4 mb-4">
                    <div class="card event-card" data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)" style="cursor: pointer;">
                        @if (researchEvent.EventThumbnail != null && researchEvent.EventThumbnail.Length > 0)
                        {
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(researchEvent.EventThumbnail)" class="card-img-top" alt="@(researchEvent.EventName ?? "Event")" />
                        }
                        else
                        {
                            <img src="~/images/BG-Header.png" class="card-img-top" alt="Default Background Header" />
                        }
                        <div class="card-body">
                            <h5 class="card-title">@(researchEvent.EventName ?? "Unnamed Event")</h5>
                            <p class="card-text">@(researchEvent.EventType ?? "Unspecified Type")</p>
                            <p class="card-text">Participant Slots: @(researchEvent.ParticipantsSlot)</p>
                            <button class="btn btn-info" type="button"
                                    data-bs-toggle="modal"
                                    data-bs-target="#invitationListModal"
                                    data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)"
                                    onclick="stopPropagation(event);">
                                View Invited Participants
                            </button>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <p class="alert-container">No invitational events found.</p>
            </div>
        }
    </div>

    <!-- Postponed Events -->
    <div class="title-section">
        <h1 class="title">Postponed Events</h1>
    </div>
    <div class="row4">
        @if (Model.PostponedEvents != null && Model.PostponedEvents.Any())
        {
            foreach (var researchEvent in Model.PostponedEvents.Where(e => !e.IsArchived))
            {
                <div class="col-md-4 mb-4">
                    <div class="card event-card" data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)" style="cursor: pointer;">
                        @if (researchEvent.EventThumbnail != null && researchEvent.EventThumbnail.Length > 0)
                        {
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(researchEvent.EventThumbnail)" class="card-img-top" alt="@(researchEvent.EventName ?? "Event")" />
                        }
                        else
                        {
                            <img src="~/images/BG-Header.png" class="card-img-top" alt="Default Background Header" />
                        }
                        <div class="card-body">
                            <h5 class="card-title">@(researchEvent.EventName ?? "Unnamed Event")</h5>
                            <p class="card-text">@(researchEvent.EventType ?? "Unspecified Type")</p>
                            <p class="card-text">Participant Slots: @(researchEvent.ParticipantsSlot)</p>
                            <button class="btn btn-info" type="button"
                                    data-bs-toggle="modal"
                                    data-bs-target="#registeredParticipantsModal"
                                    data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)"
                                    onclick="stopPropagation(event);">
                                View Registered Participants
                            </button>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <p class="alert-container">No postponed events found.</p>
            </div>
        }
    </div>

    <div class="title-section">
        <h1 class="title">Archived Events / Cancelled Events</h1>
    </div>
    <div class="row3">
        @if (Model.ArchivedEvents != null && Model.ArchivedEvents.Any())
        {
            foreach (var researchEvent in Model.ArchivedEvents)
            {
                <div class="col-md-4 mb-4">
                    <div class="card event-card" data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)" style="cursor: pointer;">
                        @if (researchEvent.EventThumbnail != null && researchEvent.EventThumbnail.Length > 0)
                        {
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(researchEvent.EventThumbnail)" class="card-img-top" alt="@(researchEvent.EventName ?? "Event")" />
                        }
                        else
                        {
                            <img src="~/images/BG-Header.png" class="card-img-top" alt="Default Background Header" />
                        }
                        <div class="card-body">
                            <h5 class="card-title">@(researchEvent.EventName ?? "Unnamed Event")</h5>
                            <p class="card-text">@(researchEvent.EventType ?? "Unspecified Type")</p>
                            <p class="card-text">Participant Slots: @(researchEvent.ParticipantsSlot)</p>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <p class="alert-container">No archived events found.</p>
            </div>
        }
        <!--Registered Participants Modal-->
        <div class="modal fade" id="registeredParticipantsModal" tabindex="-1" aria-labelledby="registeredParticipantsModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="registeredParticipantsModalLabel">Registered Participants</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th class="user-thead">User ID</th>
                                    <th>Participant Name</th>
                                    <th>Email</th>
                                </tr>
                            </thead>
                            <tbody id="participantsList">
                                <!-- Registered participants will be appended here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Invitation List Modal -->
        <div class="modal fade" id="invitationListModal" tabindex="-1" aria-labelledby="invitationListModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="invitationListModalLabel">Invited Participants</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th class="user-thead">User ID</th>
                                    <th>Participant Name</th>
                                    <th>Email</th>
                                    <th>Invitation Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="invitationListBody">
                                <!-- Invitation rows will be populated here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Event Details Modal -->
        <div class="modal fade" id="eventDetailsModal" tabindex="-1" aria-labelledby="eventDetailsModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="eventDetailsModalLabel">Event Details</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="eventDetailsForm" method="post" asp-action="UpdateEvent">
                            <input type="hidden" id="eventId" name="ResearchEventId" />

                            <div class="mb-3">
                                <label class="form-label">Event Thumbnail</label>
                                <input type="file" class="form-control" id="eventThumbnail" name="eventThumbnail" accept="image/*" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Event Name</label>
                                <input type="text" class="form-control" id="eventName" name="EventName" readonly />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Event Description</label>
                                <textarea class="form-control" id="eventDescription" name="EventDescription" readonly></textarea>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Event Location</label>
                                <input type="text" class="form-control" id="eventLocation" name="EventLocation" required />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Event Type</label>
                                <input type="text" class="form-control" id="eventType" name="EventType" readonly />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Event Date</label>
                                <input type="datetime-local" class="form-control" id="eventDate" name="EventDate" onchange="updateEndTime()" required data-local-timezone="true" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">End Time</label>
                                <input type="datetime-local" class="form-control" id="endTime" name="EndTime" required data-local-timezone="true" readonly />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Registration Type</label>
                                <input type="text" class="form-control" id="registrationType" name="RegistrationType" readonly />
                            </div>


                            <div class="mb-3">
                                <label class="form-label">Registration Open</label>
                                <input type="datetime-local" class="form-control" id="registrationOpen" name="RegistrationOpen" required data-local-timezone="true" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Registration Deadline</label>
                                <input type="datetime-local" class="form-control" id="registrationDeadline" name="RegistrationDeadline" required data-local-timezone="true" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Event Status</label>
                                <select class="form-control" id="eventStatus" name="EventStatus" required>
                                    <option value="" disabled selected>Select Status</option>
                                    <option value="Scheduled">Scheduled</option>
                                    <option value="Postponed">Postponed</option>
                                    <option value="Cancelled">Cancelled</option>
                                </select>
                            </div>

                            <div id="researchersContainer" style="display: none;">
                                <h4>Researchers List</h4>
                                <table id="researchersTable" class="table">
                                    <thead>
                                        <tr>
                                            <th>Select</th>
                                            <th>Name</th>
                                            <th>UserId</th>
                                        </tr>
                                    </thead>
                                    <tbody id="researchersList">
                                        <!-- Researcher list will be dynamically populated here -->
                                    </tbody>
                                </table>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Participant Slot</label>
                                <input type="number" class="form-control" id="participantSlot" name="ParticipantsSlot" min="1" required />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Participant Count</label>
                                <input type="number" class="form-control" id="participantCount" name="ParticipantsCount" readonly />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Last Updated At</label>
                                <input type="text" class="form-control" id="updatedAt" name="UpdatedAt" readonly />
                            </div>

                            <div class="modal-footer">
                                <button type="submit" class="btn btn-update">Update</button>
                                <button id="archiveEventButton" type="button" class="btn-archive">Archive</button>
                                <button id="unarchiveEventButton" type="button" class="btn-unarchive" style="display:none;">Unarchive</button>
                                <button id="deleteEventButton" type="button" class="btn btn-delete" style="display: none;">Delete</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

@section Scripts {
    <script>
        function updateEndTime() {
            var eventDateInput = document.querySelector('input[name="EventDate"]');
            var endTimeInput = document.querySelector('input[name="EndTime"]');
            if (eventDateInput.value) {
                var eventDateParts = eventDateInput.value.split("T");
                var eventDate = eventDateParts[0];
                var eventTime = eventDateParts[1];

                var endTimeDateTime = new Date(eventDate + 'T' + eventTime);

                endTimeInput.value = eventDate + 'T' + eventTime;

                endTimeInput.setAttribute('min', eventDate + 'T' + eventTime);
                endTimeInput.setAttribute('max', eventDate + 'T' + '23:59');

                endTimeInput.readOnly = false;
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            var eventDateInput = document.querySelector('input[name="EventDate"]');
            updateEndTime();

            eventDateInput.addEventListener('change', updateEndTime);
        });
    </script>

    <script>

        function stopPropagation(event) {
            event.stopPropagation();
        }
    </script>

    <script>
        $(document).ready(function () {
            $(".event-card").click(function () {
                var eventId = $(this).data("event-id");
                console.log(`Event ID: ${eventId}`);

                function formatLocalDateTime(utcDateString) {
                    if (!utcDateString) return '';
                    const date = new Date(utcDateString);
                    // Adjust to local timezone and format to YYYY-MM-DDThh:mm
                    return new Date(date.getTime() - (date.getTimezoneOffset() * 60000))
                        .toISOString()
                        .slice(0, 16);
                }

                // MODALS
                if (eventId) {
                    $.ajax({
                        url: '/CrdlSys/Chief/GetEventDetails',
                        type: 'GET',
                        data: { id: eventId },
                        success: function (data) {
                            console.log("Received data:", data);
                            if (data) {
                                $("#eventId").val(data.researchEventId || '');
                                $("#eventName").val(data.eventName || '');
                                $("#eventDescription").val(data.eventDescription || '');
                                $("#eventLocation").val(data.eventLocation || '');
                                $("#eventType").val(data.eventType || '');
                                $("#registrationType").val(data.registrationType || '');
                                $("#eventDate").val(data.eventDate ? formatLocalDateTime(data.eventDate) : '');
                                $("#endTime").val(data.endTime ? formatLocalDateTime(data.endTime) : '');
                                $("#registrationOpen").val(data.registrationOpen ? formatLocalDateTime(data.registrationOpen) : '');
                                $("#registrationDeadline").val(data.registrationDeadline ? formatLocalDateTime(data.registrationDeadline) : '');
                                $("#eventStatus").val(data.eventStatus || '');
                                $("#participantSlot").val(data.participantsSlot || 0);
                                $("#participantCount").val(data.participantsCount || 0);
                                $("#updatedAt").val(data.updatedAt ? new Date(data.updatedAt).toLocaleString() : 'Not updated yet');

                                if (data.eventThumbnail) {
                                    $('#thumbnailPreview').attr('src', 'data:image/jpeg;base64,' + data.eventThumbnail).show();
                                } else {
                                    $('#thumbnailPreview').attr('src', '').hide();
                                }

                                console.log("Is Archived:", data.isArchived);

                                // Check if registration type is 'Invitational'
                                if (data.registrationType === 'Invitational') {
                                    $("#researchersContainer").show();
                                    fetchResearchers(data.researchEventId);
                                } else {
                                    $("#researchersContainer").hide();
                                }

                                // Show/hide buttons based on isArchived status
                                if (data.isArchived) {
                                    console.log("Event is archived. Showing delete and unarchive buttons.");
                                    $("#deleteEventButton").show();
                                    $("#unarchiveEventButton").show();
                                    $("#archiveEventButton").hide();
                                } else {
                                    console.log("Event is not archived. Showing archive button.");
                                    $("#deleteEventButton").hide();
                                    $("#unarchiveEventButton").hide();
                                    $("#archiveEventButton").show();
                                }

                                $('#eventDetailsModal').modal('show');
                            } else {
                                console.error("Received null or undefined data from server");
                                alert("Error: Unable to fetch event details.");
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX error:", status, error);
                            alert("An error occurred: " + xhr.responseText);
                        }
                    });
                } else {
                    alert("Event ID is missing.");
                }
            });

            //UPDATE
            $("#eventDetailsForm").submit(function (e) {
                    e.preventDefault();
                    const formData = new FormData(this);

                    const selectedResearcherIds = [];
                    $(".researcherCheckbox:checked").each(function () {
                        selectedResearcherIds.push($(this).val());
                    });

                    formData.append('userIdsToInvite', JSON.stringify(selectedResearcherIds));

                $.ajax({
                    url: '/CrdlSys/Chief/UpdateEvent',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            alert("Event updated successfully!");
                            $('#eventDetailsModal').modal('hide');
                            location.reload();
                        } else {
                            var errorMessage = response.message;
                            if (Array.isArray(errorMessage)) {
                                errorMessage = errorMessage.join(", ");
                            }
                            alert("Failed to update event: " + errorMessage);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error:", status, error);
                        var errorMessage = "An error occurred while updating the event.";
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage += " " + xhr.responseJSON.message;
                        }
                        alert(errorMessage);
                    }
                });
            });

            //ARCHIVE
            $("#archiveEventButton").click(function () {
                if (confirm("Are you sure you want to archive this event?")) {
                    $.ajax({
                        url: '/CrdlSys/Chief/ArchiveEvent',
                        type: 'POST',
                        data: { id: $("#eventId").val() },
                        success: function (response) {
                            alert("Event archived successfully!");
                            $('#eventDetailsModal').modal('hide');
                            location.reload();
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX error:", status, error);
                            alert("An error occurred while archiving the event.");
                        }
                    });
                }
            });

            //UNARCHIVE
            $("#unarchiveEventButton").click(function () {
                if (confirm("Are you sure you want to unarchive this event?")) {
                    $.ajax({
                        url: '/CrdlSys/Chief/UnarchiveEvent',
                        type: 'POST',
                        data: { id: $("#eventId").val() },
                        success: function (response) {
                            alert("Event unarchived successfully!");
                            $('#eventDetailsModal').modal('hide');
                            location.reload();
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX error:", status, error);
                            alert("An error occurred while unarchiving the event.");
                        }
                    });
                }
            });

            //DELETE
            $("#deleteEventButton").click(function () {
                if (confirm("Are you sure you want to delete this event? This action cannot be undone.")) {
                    $.ajax({
                        url: '/CrdlSys/Chief/DeleteEvent',
                        type: 'POST',
                        data: { id: $("#eventId").val() },
                        success: function (response) {
                            alert("Event deleted successfully!");
                            $('#eventDetailsModal').modal('hide');
                            location.reload();
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX error:", status, error);
                            alert("An error occurred while deleting the event.");
                        }
                    });
                }
            });

            //FETCH INVITED PARTICIPANT
            $('#invitationListModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var eventId = button.data('event-id');

                var modal = $(this);
                var invitationListBody = modal.find('#invitationListBody');
                invitationListBody.empty();

                $.ajax({
                    url: '/CrdlSys/Chief/GetInvitedParticipants',
                    type: 'GET',
                    data: { eventId: eventId },
                    success: function (data) {
                        console.log("Invited participants data:", data);
                        if (data && data.length > 0) {
                            data.forEach(function (participant) {
                                invitationListBody.append(`
                                            <tr>
                                                <td>${participant.userId}</td>
                                                <td>${participant.name}</td>
                                                <td>${participant.email}</td>
                                                <td>${participant.invitationStatus}</td>
                                                <td class = "action-column">
                                               <button class="btn btn-danger btn-sm delete-invitation"
                                                    data-invitation-id="${participant.invitationId}"
                                                    data-event-id="${eventId}"
                                                    data-invitation-status="${participant.invitationStatus}">
                                                    Delete
                                               </button>
                                                </td>
                                            </tr>
                                        `);
                            });

                            $('.delete-invitation').on('click', function () {
                                var invitationId = $(this).data('invitation-id');
                                var eventId = $(this).data('event-id');
                                deleteInvitation(invitationId, eventId);
                            });
                        } else {
                            invitationListBody.append(`
                                        <tr>
                                            <td colspan="3" class="text-center">No participants invited.</td>
                                        </tr>
                                    `);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching invited participants:", error);
                        invitationListBody.append(`
                                    <tr>
                                        <td colspan="3" class="text-center">Error loading participants.</td>
                                    </tr>
                                `);
                    }
                });
            });
        });

        // FETCH REGISTERED PARTICIPANTS
        $('#registeredParticipantsModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var eventId = button.attr('data-event-id');

            console.log("Opening modal for event ID:", eventId);

            if (!eventId) {
                console.error("No event ID found");
                alert('No event ID found');
                return;
            }
            $.ajax({
                url: '/CrdlSys/Chief/GetRegisteredParticipants',
                type: 'GET',
                data: { eventId: eventId },
                success: function (response) {
                    console.log("Server response:", response);
                    var participantsList = $('#participantsList');
                    participantsList.empty();

                    if (!response || response.length === 0) {
                        participantsList.append('<tr><td colspan="3" class="text-center">No registered participants found.</td></tr>');
                        return;
                    }

                    response.forEach(function (participant) {
                        console.log("Processing participant:", participant);
                        if (participant && participant.fullName) {
                            var row = `
                                        <tr>
                                            <td>${participant.userId}</td> <!-- Display User ID -->
                                            <td>${participant.fullName}</td>
                                            <td>${participant.email}</td> <!-- Display email -->
                                        </tr>
                                    `;
                            participantsList.append(row);
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Ajax error:", {
                        status: status,
                        error: error,
                        response: xhr.responseText
                    });
                    participantsList.empty().append(
                        '<tr><td colspan="3" class="text-danger text-center">Error loading participants. Please try again.</td></tr>'
                    );
                }
            });
        });

        //FETCH RESEARCHERS LIST
        function fetchResearchers(eventId) {
            $.ajax({
                url: '/CrdlSys/Chief/GetResearchers', // Backend endpoint
                type: 'GET',
                data: { eventId: eventId }, // Send eventId to the server
                success: function (data) {
                    console.log("Fetched uninvited researchers:", data);
                    var researchersList = $("#researchersList");
                    researchersList.empty(); // Clear previous entries

                    // Check if we received any data
                    if (data && data.length > 0) {
                        // Populate the table with uninvited researchers
                        data.forEach(function (researcher) {
                            var row = `
                                        <tr>
                                            <td><input type="checkbox" class="researcherCheckbox" name="inviteResearchers" value="${researcher.userId}" /></td>
                                            <td>${researcher.firstName} ${researcher.lastName}</td>
                                            <td>${researcher.userId}</td>
                                        </tr>
                                    `;
                            researchersList.append(row); // Add row to table
                        });
                    } else {
                        researchersList.append('<tr><td colspan="3">No uninvited researchers found.</td></tr>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching researchers:", status, error);
                    alert("An error occurred while fetching researchers.");
                }
            });
        }

        // DELETE INVITATION
        $(document).on('click', '.delete-invitation', function () {
            var invitationId = $(this).data('invitation-id');
            var invitationStatus = $(this).data('invitation-status');

            console.log("Attempting to delete invitation with ID:", invitationId, "and status:", invitationStatus);

            // Only allow deletion if the status is "Pending" or "Declined"
            if (invitationStatus === "Pending" || invitationStatus === "Declined") {
                if (confirm("Are you sure you want to delete this invitation?")) {
                    $.ajax({
                        url: '/CrdlSys/Chief/DeleteInvitation',
                        type: 'POST',
                        data: { invitationId: invitationId },
                        success: function (response) {
                            console.log("Invitation deleted successfully:", response);
                            $('#invitationListModal').modal('hide');
                            $('#invitationListModal').modal('show'); // Refresh the list correctly
                        },
                        error: function (xhr, status, error) {
                            console.error("Error deleting invitation:", error);
                            alert("An error occurred while deleting the invitation: " + error);
                        }
                    });
                }
            } else {
                alert("Invitation cannot be deleted because it has been accepted.");
            }
        });
    </script>
}
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
