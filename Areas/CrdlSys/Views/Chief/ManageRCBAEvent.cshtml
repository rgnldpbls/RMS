@model CrdlSys.ViewModels.ManageRCBAEventsPageViewModel
@{
    ViewData["Title"] = "Manage RCBA Events";
    //Layout = "_LayoutManageEvent";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

@section Styles {
    <link rel="stylesheet" href="~/css/ChiefManageRCBAEvents.css" asp-append-version="true">
}

<!--Open Registration Events-->
<div class="title-section">
    <h1 class="title">Open Registration Events</h1>
</div>
<div class="row1">
    @if (Model.OpenRegistrationEvents != null && Model.OpenRegistrationEvents.Any())
    {
        foreach (var researchEvent in Model.OpenRegistrationEvents.Where(e => !e.IsArchived && e.EventStatus == "Scheduled"))
        {
            <div class="col-md-4 mb-4">
                <div class="card event-card" data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)" style="cursor: pointer;">
                    @if (researchEvent.EventThumbnail != null && researchEvent.EventThumbnail.Length > 0)
                    {
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(researchEvent.EventThumbnail)" class="card-img-top" alt="@(researchEvent.EventName ?? "Event")" />
                    }
                    else
                    {
                        <img src="~/images/BG-Header.png" class="card-img-top" alt="Default Background Header" />
                    }
                    <div class="card-body">
                        <h5 class="card-title">@(researchEvent.EventName ?? "Unnamed Event")</h5>
                        <p class="card-text">@(researchEvent.EventType ?? "Unspecified Type")</p>
                        <p class="card-text">Participant Slots: @(researchEvent.ParticipantsSlot)</p>
                        <button class="btn btn-info" type="button"
                                data-bs-toggle="modal"
                                data-bs-target="#registeredParticipantsModal"
                                data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)"
                                onclick="stopPropagation(event);">
                            View Registered Participants
                        </button>

                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <p class="alert-container">No open registration events found.</p>
        </div>
    }
</div>

<!--Invitational Events-->
<div class="title-section">
    <h1 class="title">Invitational Events</h1>
</div>
<div class="row2">
    @if (Model.InvitationalEvents != null && Model.InvitationalEvents.Any())
    {
        foreach (var researchEvent in Model.InvitationalEvents.Where(e => !e.IsArchived))
        {
            <div class="col-md-4 mb-4">
                <div class="card event-card" data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)" style="cursor: pointer;">
                    @if (researchEvent.EventThumbnail != null && researchEvent.EventThumbnail.Length > 0)
                    {
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(researchEvent.EventThumbnail)" class="card-img-top" alt="@(researchEvent.EventName ?? "Event")" />
                    }
                    else
                    {
                        <img src="~/images/BG-Header.png" class="card-img-top" alt="Default Background Header" />
                    }
                    <div class="card-body">
                        <h5 class="card-title">@(researchEvent.EventName ?? "Unnamed Event")</h5>
                        <p class="card-text">@(researchEvent.EventType ?? "Unspecified Type")</p>
                        <p class="card-text">Participant Slots: @(researchEvent.ParticipantsSlot)</p>
                        <button class="btn btn-info" type="button"
                                data-bs-toggle="modal"
                                data-bs-target="#invitationListModal"
                                data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)"
                                onclick="stopPropagation(event);">
                            View Invited Participants
                        </button>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <p class="alert-container">No invitational events found.</p>
        </div>
    }
</div>

<!-- Postponed Events -->
<div class="title-section">
    <h1 class="title">Postponed Events</h1>
</div>
<div class="row4">
    @if (Model.PostponedEvents != null && Model.PostponedEvents.Any())
    {
        foreach (var researchEvent in Model.PostponedEvents.Where(e => !e.IsArchived))
        {
            <div class="col-md-4 mb-4">
                <div class="card event-card" data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)" style="cursor: pointer;">
                    @if (researchEvent.EventThumbnail != null && researchEvent.EventThumbnail.Length > 0)
                    {
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(researchEvent.EventThumbnail)" class="card-img-top" alt="@(researchEvent.EventName ?? "Event")" />
                    }
                    else
                    {
                        <img src="~/images/BG-Header.png" class="card-img-top" alt="Default Background Header" />
                    }
                    <div class="card-body">
                        <h5 class="card-title">@(researchEvent.EventName ?? "Unnamed Event")</h5>
                        <p class="card-text">@(researchEvent.EventType ?? "Unspecified Type")</p>
                        <p class="card-text">Participant Slots: @(researchEvent.ParticipantsSlot)</p>
                        <button class="btn btn-info" type="button"
                                data-bs-toggle="modal"
                                data-bs-target="#registeredParticipantsModal"
                                data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)"
                                onclick="stopPropagation(event);">
                            View Registered Participants
                        </button>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <p class="alert-container">No postponed events found.</p>
        </div>
    }
</div>

<div class="title-section">
    <h1 class="title">Archived Events / Cancelled Events</h1>
</div>
<div class="row3">
    @if (Model.ArchivedEvents != null && Model.ArchivedEvents.Any())
    {
        foreach (var researchEvent in Model.ArchivedEvents)
        {
            <div class="col-md-4 mb-4">
                <div class="card event-card" data-event-id="@(researchEvent.ResearchEventId ?? string.Empty)" style="cursor: pointer;">
                    @if (researchEvent.EventThumbnail != null && researchEvent.EventThumbnail.Length > 0)
                    {
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(researchEvent.EventThumbnail)" class="card-img-top" alt="@(researchEvent.EventName ?? "Event")" />
                    }
                    else
                    {
                        <img src="~/images/BG-Header.png" class="card-img-top" alt="Default Background Header" />
                    }
                    <div class="card-body">
                        <h5 class="card-title">@(researchEvent.EventName ?? "Unnamed Event")</h5>
                        <p class="card-text">@(researchEvent.EventType ?? "Unspecified Type")</p>
                        <p class="card-text">Participant Slots: @(researchEvent.ParticipantsSlot)</p>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <p class="alert-container">No archived events found.</p>
        </div>
    }
    <!--Registered Participants Modal-->
    <div class="modal fade" id="registeredParticipantsModal" tabindex="-1" aria-labelledby="registeredParticipantsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="registeredParticipantsModalLabel">Registered Participants</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>User ID</th>
                                <th>Participant Name</th>
                                <th>Email</th>
                            </tr>
                        </thead>
                        <tbody id="participantsList">
                            <!-- Registered participants will be appended here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Invitation List Modal -->
    <div class="modal fade" id="invitationListModal" tabindex="-1" aria-labelledby="invitationListModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="invitationListModalLabel">Invited Participants</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>User ID</th>
                                <th>Participant Name</th>
                                <th>Email</th>
                                <th>Invitation Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="invitationListBody">
                            <!-- Invitation rows will be populated here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Event Details Modal -->
    <div class="modal fade" id="eventDetailsModal" tabindex="-1" aria-labelledby="eventDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventDetailsModalLabel">Event Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="eventDetailsForm" method="post" asp-action="UpdateEvent">
                        <input type="hidden" id="eventId" name="ResearchEventId" />

                        <div class="mb-3">
                            <label class="form-label">Event Thumbnail</label>
                            <input type="file" class="form-control" id="eventThumbnail" name="eventThumbnail" accept="image/*" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Event Name</label>
                            <input type="text" class="form-control" id="eventName" name="EventName" readonly />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Event Description</label>
                            <textarea class="form-control" id="eventDescription" name="EventDescription" readonly></textarea>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Event Location</label>
                            <input type="text" class="form-control" id="eventLocation" name="EventLocation" required />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Event Type</label>
                            <input type="text" class="form-control" id="eventType" name="EventType" readonly />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Event Date</label>
                            <input type="datetime-local" class="form-control" id="eventDate" name="EventDate" required onchange="updateEndTime()" data-local-timezone="true" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">End Time</label>
                            <input type="datetime-local" class="form-control" id="endTime" name="EndTime" required data-local-timezone="true" readonly />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Registration Type</label>
                            <input type="text" class="form-control" id="registrationType" name="RegistrationType" readonly />
                        </div>


                        <div class="mb-3">
                            <label class="form-label">Registration Open</label>
                            <input type="datetime-local" class="form-control" id="registrationOpen" name="RegistrationOpen" required data-local-timezone="true" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Registration Deadline</label>
                            <input type="datetime-local" class="form-control" id="registrationDeadline" name="RegistrationDeadline" required data-local-timezone="true" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Event Status</label>
                            <select class="form-control" id="eventStatus" name="EventStatus" required>
                                <option value="" disabled selected>Select Status</option>
                                <option value="Scheduled">Scheduled</option>
                                <option value="Postponed">Postponed</option>
                                <option value="Cancelled">Cancelled</option>
                            </select>
                        </div>

                        <div id="researchersContainer" style="display: none;">
                            <h4>Researchers List</h4>
                            <table id="researchersTable" class="table">
                                <thead>
                                    <tr>
                                        <th>Select</th>
                                        <th>Name</th>
                                        <th>UserId</th>
                                    </tr>
                                </thead>
                                <tbody id="researchersList">
                                    <!-- Researcher list will be dynamically populated here -->
                                </tbody>
                            </table>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Participant Slot</label>
                            <input type="number" class="form-control" id="participantSlot" name="ParticipantsSlot" min="1" required />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Participant Count</label>
                            <input type="number" class="form-control" id="participantCount" name="ParticipantsCount" readonly />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Last Updated At</label>
                            <input type="text" class="form-control" id="updatedAt" name="UpdatedAt" readonly />
                        </div>

                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Update Event</button>
                            <button id="archiveEventButton" type="button" class="btn btn-warning">Archive</button>
                            <button id="unarchiveEventButton" type="button" class="btn btn-info" style="display:none;">Unarchive Event</button>
                            <button id="deleteEventButton" type="button" class="btn btn-danger" style="display: none;">Delete</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            function closeAllModals() {
                $('.modal').modal('hide'); // This will hide all currently open modals
            }

            function updateEndTime() {
                var eventDateInput = document.querySelector('input[name="EventDate"]');
                var endTimeInput = document.querySelector('input[name="EndTime"]');
                if (eventDateInput.value) {
                    var eventDateParts = eventDateInput.value.split("T");
                    var eventDate = eventDateParts[0];
                    var eventTime = eventDateParts[1];

                    endTimeInput.value = eventDate + 'T' + eventTime;
                    endTimeInput.setAttribute('min', eventDate + 'T' + eventTime);
                    endTimeInput.setAttribute('max', eventDate + 'T' + '23:59');
                    endTimeInput.readOnly = false;
                }
            }

            function stopPropagation(event) {
                event.stopPropagation();
            }

            function formatLocalDateTime(utcDateString) {
                if (!utcDateString) return '';
                const date = new Date(utcDateString);
                return new Date(date.getTime() - (date.getTimezoneOffset() * 60000))
                    .toISOString()
                    .slice(0, 16);
            }

            function fetchResearchers(eventId) {
                $.ajax({
                    url: '/CrdlSys/Chief/GetResearchers',
                    type: 'GET',
                    data: { eventId: eventId },
                    success: function (data) {
                        const researchersList = $("#researchersList");
                        researchersList.empty();

                        if (data && data.length > 0) {
                            data.forEach(function (researcher) {
                                const row = `
                                            <tr>
                                                <td><input type="checkbox" class="researcherCheckbox" name="inviteResearchers" value="${researcher.userId}" /></td>
                                                <td>${researcher.firstName} ${researcher.lastName}</td>
                                                <td>${researcher.userId}</td>
                                            </tr>`;
                                researchersList.append(row);
                            });
                        } else {
                            researchersList.append('<tr><td colspan="3">No uninvited researchers found.</td></tr>');
                        }
                    },
                    error: function () {
                        alert("An error occurred while fetching researchers.");
                    }
                });
            }

            // Log the selected researchers in the console
            function logSelectedResearchers() {
                const selectedResearchers = Array.from(document.querySelectorAll('.researcherCheckbox:checked'))
                    .map(checkbox => checkbox.value);
                console.log("Selected Researchers:", selectedResearchers);
            }

            function bindEventListeners() {
                $(".event-card").click(function (e) {
                    if ($(e.target).hasClass('btn')) {
                        return;
                    }
                    e.stopPropagation();
                    closeAllModals();
                    const eventId = $(this).data("event-id");
                    if (!eventId) {
                        alert("Event ID is missing.");
                        return;
                    }

                    $.ajax({
                        url: '/CrdlSys/Chief/GetEventDetails',
                        type: 'GET',
                        data: { id: eventId },
                        success: function (data) {
                            if (data) {
                                $("#eventId").val(data.researchEventId || '');
                                $("#eventName").val(data.eventName || '');
                                $("#eventDescription").val(data.eventDescription || '');
                                $("#eventLocation").val(data.eventLocation || '');
                                $("#eventType").val(data.eventType || '');
                                $("#registrationType").val(data.registrationType || '');
                                $("#eventDate").val(data.eventDate ? formatLocalDateTime(data.eventDate) : '');
                                $("#endTime").val(data.endTime ? formatLocalDateTime(data.endTime) : '');
                                $("#registrationOpen").val(data.registrationOpen ? formatLocalDateTime(data.registrationOpen) : '');
                                $("#registrationDeadline").val(data.registrationDeadline ? formatLocalDateTime(data.registrationDeadline) : '');
                                $("#eventStatus").val(data.eventStatus || '');
                                $("#participantSlot").val(data.participantsSlot || 0);
                                $("#participantCount").val(data.participantsCount || 0);
                                $("#updatedAt").val(data.updatedAt ? new Date(data.updatedAt).toLocaleString() : 'Not updated yet');

                                if (data.eventThumbnail) {
                                    $('#thumbnailPreview').attr('src', 'data:image/jpeg;base64,' + data.eventThumbnail).show();
                                } else {
                                    $('#thumbnailPreview').attr('src', '').hide();
                                }

                                if (data.registrationType === 'Invitational') {
                                    $("#researchersContainer").show();
                                    fetchResearchers(data.researchEventId);
                                } else {
                                    $("#researchersContainer").hide();
                                }

                                if (data.isArchived) {
                                    $("#deleteEventButton").show();
                                    $("#unarchiveEventButton").show();
                                    $("#archiveEventButton").hide();
                                } else {
                                    $("#deleteEventButton").hide();
                                    $("#unarchiveEventButton").hide();
                                    $("#archiveEventButton").show();
                                }

                                $('#eventDetailsModal').modal('show');
                            } else {
                                alert("Error: Unable to fetch event details.");
                            }
                        },
                        error: function () {
                            alert("An error occurred while fetching event details.");
                        }
                    });
                });

                $('#invitationListModal').on('show.bs.modal', function (event) {
                    const button = $(event.relatedTarget);
                    const eventId = button.data('event-id');

                    const modal = $(this);
                    const invitationListBody = modal.find('#invitationListBody');
                    invitationListBody.empty();

                    $.ajax({
                        url: '/CrdlSys/Chief/GetInvitedParticipants',
                        type: 'GET',
                        data: { eventId: eventId },
                        success: function (data) {
                            console.log("Invited participants data:", data);
                            if (data && data.length > 0) {
                                data.forEach(function (participant) {
                                    invitationListBody.append(`
                                    <tr>
                                        <td>${participant.userId}</td>
                                        <td>${participant.name}</td>
                                        <td>${participant.email}</td>
                                        <td>${participant.invitationStatus}</td>
                                        <td>
                                            <button class="btn btn-danger btn-sm delete-invitation"
                                                data-invitation-id="${participant.invitationId}"
                                                data-event-id="${eventId}"
                                                data-invitation-status="${participant.invitationStatus}">
                                                Delete
                                            </button>
                                        </td>
                                    </tr>
                                `);
                            });

                            $('.delete-invitation').on('click', function () {
                                var invitationId = $(this).data('invitation-id');
                                var eventId = $(this).data('event-id');
                                deleteInvitation(invitationId, eventId);
                            });
                            } else {
                                invitationListBody.append(`
                                <tr>
                                    <td colspan="3" class="text-center">No participants invited.</td>
                                </tr>
                                `);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching invited participants:", error);
                            invitationListBody.append(`
                            <tr>
                                <td colspan="3" class="text-center">Error loading participants.</td>
                            </tr>
                            `);
                        }
                    });
                });

                $(document).on('click', '.delete-invitation', function () {
                    var invitationId = $(this).data('invitation-id');
                    var invitationStatus = $(this).data('invitation-status');

                    console.log("Attempting to delete invitation with ID:", invitationId, "and status:", invitationStatus);

                    if (invitationStatus?.toLowerCase() === "pending" || invitationStatus?.toLowerCase() === "declined") {
                        if (confirm("Are you sure you want to delete this invitation?")) {
                            $.ajax({
                                url: '/CrdlSys/Chief/DeleteInvitation',
                                type: 'POST',
                                data: { invitationId: invitationId },
                                success: function (response) {
                                    console.log("Invitation deleted successfully:", response);
                                    $('#invitationListModal').modal('hide');
                                    $('#invitationListModal').modal('show'); 
                                },
                                error: function (xhr, status, error) {
                                    console.error("Error deleting invitation:", error);
                                    alert("An error occurred while deleting the invitation: " + error);
                                }
                            });
                        }
                    } else {
                        alert("Invitation cannot be deleted because it has been accepted.");
                    }
                });

                $("#eventDetailsForm").submit(function (e) {
                    e.preventDefault();
                    const formData = new FormData(this);

                    const selectedResearcherIds = [];
                    $(".researcherCheckbox:checked").each(function () {
                        selectedResearcherIds.push($(this).val());
                    });

                    formData.append('userIdsToInvite', JSON.stringify(selectedResearcherIds));

                    $.ajax({
                        url: '/CrdlSys/Chief/UpdateEvent',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            if (response.success) {
                                alert("Event updated successfully!");
                                $('#eventDetailsModal').modal('hide');
                                location.reload();
                            } else {
                                alert("Failed to update event: " + (response.message || "Unknown error"));
                            }
                        },
                        error: function () {
                            alert("An error occurred while updating the event.");
                        }
                    });
                });

                $("#archiveEventButton").click(function () {
                    if (confirm("Are you sure you want to archive this event?")) {
                        $.ajax({
                            url: '/CrdlSys/Chief/ArchiveEvent',
                            type: 'POST',
                            data: { id: $("#eventId").val() },
                            success: function () {
                                alert("Event archived successfully!");
                                $('#eventDetailsModal').modal('hide');
                                location.reload();
                            },
                            error: function () {
                                alert("An error occurred while archiving the event.");
                            }
                        });
                    }
                });

                $("#unarchiveEventButton").click(function () {
                    if (confirm("Are you sure you want to unarchive this event?")) {
                        $.ajax({
                            url: '/CrdlSys/Chief/UnarchiveEvent',
                            type: 'POST',
                            data: { id: $("#eventId").val() },
                            success: function () {
                                alert("Event unarchived successfully!");
                                $('#eventDetailsModal').modal('hide');
                                location.reload();
                            },
                            error: function () {
                                alert("An error occurred while unarchiving the event.");
                            }
                        });
                    }
                });

                $("#deleteEventButton").click(function () {
                    if (confirm("Are you sure you want to delete this event? This action cannot be undone.")) {
                        $.ajax({
                            url: '/CrdlSys/Chief/DeleteEvent',
                            type: 'POST',
                            data: { id: $("#eventId").val() },
                            success: function () {
                                alert("Event deleted successfully!");
                                $('#eventDetailsModal').modal('hide');
                                location.reload();
                            },
                            error: function () {
                                alert("An error occurred while deleting the event.");
                            }
                        });
                    }
                });
            }

            $(document).ready(function () {
                updateEndTime();
                bindEventListeners();

                $('#registeredParticipantsModal').on('show.bs.modal', function (event) {
                    const button = $(event.relatedTarget);
                    const eventId = button.data('event-id');

                    const participantsList = $('#participantsList');
                    participantsList.empty();

                    $.ajax({
                        url: '/CrdlSys/Chief/GetRegisteredParticipants',
                        type: 'GET',
                        data: { eventId: eventId },
                        success: function (response) {
                            const participantsList = $('#participantsList');
                            participantsList.empty();

                            if (response && response.length > 0) {
                                response.forEach(participant => {
                                    participantsList.append(`
                                                <tr>
                                                    <td>${participant.userId}</td>
                                                    <td>${participant.fullName}</td>
                                                    <td>${participant.email}</td>
                                                </tr>`);
                                });
                            } else {
                                participantsList.append('<tr><td colspan="3" class="text-center">No participants found.</td></tr>');
                            }
                        },
                        error: function () {
                            alert("An error occurred while fetching participants.");
                        }
                    });
                });
            });
        })();
    </script>
}