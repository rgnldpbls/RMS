@model CrdlSys.Models.ReportViewModel

@{
    Layout = "Director";
    ViewData["Title"] = "Generate Report";
}

<head>
    <title>Generate Report</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<style>
    body {
        background-color: #E8E6E6;
    }

    .form-control, .form-select {
        border: 1px solid #850000;
    }

    input[type="submit"], input[type="reset"], #modalbtn, input[type="button"], .new {
        background: #850000;
        border-radius: 15px;
        height: 50px;
        padding: 0px 30px;
        color: white;
        font-family: "Inter";
        font-size: 20px;
        border: none;
        outline: none;
        box-shadow: 2px 5px 5px rgb(0, 0, 0, 0.10), -2px 5px 5px rgb(0, 0, 0, 0.10);
        transition: ease-in-out .1s
    }

        input[type="submit"]:hover, input[type="reset"]:hover, #modalbtn:hover, input[type="button"]:hover, .new:hover {
            background: #560000;
        }
</style>

<div class="spinner-backdrop"></div>
<div class="loading-spinner">
    <div class="spinner-border text-danger" style="width: 3rem; height: 3rem;" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>


<div class="container shadow h4 p-4 text-white text-start rounded-4 fw-bold" style="background: #850000; font-family: Poppins;">
    Generate Report
</div>

<div class="container p-4 bg-white shadow rounded-4">

    <form id="reportForm">
        <div class="row mb-3">
            <div class="col-md-6 report">
                <label for="reportType" class="form-label">Report Type</label>
                <select class="form-select mb-3" id="reportType" name="reportType" required>
                    <option value="">Select a report type</option>
                    <option value="List of Contracts">List of Contracts</option>
                    <option value="List of New Partners">List of New Partners</option>
                    <option value="List of Events">List of Events</option>
                    <option value="List of Attendees">List of Attendees</option>
                    <option value="List of Renewal Contracts">List of Renewal Contracts</option>
                </select>
            </div>

            <div class="row d-flex align-items-center justify-content-between mt-2 second">
                <div class="col-md-5 fn">
                    <label for="fileName" class="form-label">File Name</label>
                    <input type="text" class="form-control mb-3" id="fileName" name="fileName" placeholder="Enter file name" required>
                </div>

                <!-- Select Year Dropdown Field -->
                <div class="col-md-5 year" id="yearContainer" style="display: none;">
                    <label for="year" class="form-label">Select Year</label>
                    <select class="form-select mb-3" id="year" name="year">
                        @for (int i = DateTime.Now.Year; i >= 2024; i--)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>

                <div class="col-md-5 attendees" id="eventContainer" style="display: none;">
                    <label for="eventId" class="form-label">Select Event</label>
                    <select class="form-select mb-3" id="eventId" name="eventId">
                        <option value="">Select an event</option>
                        @foreach (var eventItem in Model.ResearchEvents)
                        {
                            <option value="@eventItem.ResearchEventId">@eventItem.ResearchEventId : @eventItem.EventName</option>
                        }
                    </select>
                </div>
            </div>

            <div class="row text-center align-content-lg-center mt-4 ms-xl-5">
                <div class="col-md-5 mb-3">
                    <button type="submit" class="btn-report w-100 new">
                        <i class="fas fa-file-export me-2"></i>Generate Report
                    </button>
                </div>
                <div class="col-md-5 mb-3">
                    <button type="button" class="btn-table w-100 new" data-bs-toggle="modal" data-bs-target="#reportsModal">
                        <i class="fas fa-file-export me-2"></i>View Table
                    </button>
                </div>
            </div>
        </div>
    </form>

</div>
<!-- Modal Structure -->
<div class="modal fade" id="reportsModal" tabindex="-1" aria-labelledby="reportsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl">
        <div class="modal-content custom-modal-bg">
            <div class="modal-header" style="background: #850000;">
                <h5 class="modal-title text-white fw-bold" id="reportsModalLabel" style="font-family: Poppins;">Generated Reports</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="background: #E8E6E6;">
                <div class="container bg-white shadow mt-1 table-responsive rounded-4 p-0">
                    <table class="table w-100">
                        <thead class="shadow-sm" style="background:#850000;">
                            <tr class="align-middle">
                                <th class="p-4 bg-transparent text-white" scope="col">Report ID</th>
                                <th class="p-4 bg-transparent text-white" scope="col">Type Of Report</th>
                                <th class="p-4 bg-transparent text-white" scope="col">File Name</th>
                                <th class="p-4 bg-transparent text-white" scope="col">Year</th>
                                <th class="p-4 bg-transparent text-white" scope="col">Research Event ID</th>
                                <th class="p-4 bg-transparent text-white" scope="col">Generated At</th>
                                <th class="p-4 bg-transparent text-white" scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var report in Model.GeneratedReports)
                            {
                                <tr id="report-row-@report.ReportId" class="align-middle">
                                    <td class="p-4 bg-transparent" scope="row">@report.ReportId</td>
                                    <td class="p-4 bg-transparent">@report.TypeOfReport</td>
                                    <td class="p-4 bg-transparent">@report.FileName</td>
                                    <td class="p-4 bg-transparent">@(report.Year.HasValue ? report.Year.ToString() : "N/A")</td>
                                    <td class="p-4 bg-transparent">@report.ResearchEventId</td>
                                    <td class="p-4 bg-transparent">@report.GeneratedAt.ToString("g")</td>
                                    <td class="p-4 bg-transparent">
                                        <button class="btn btn-primary btn-sm download-btn"
                                                data-report-id="@report.ReportId"
                                                data-filename="@report.FileName">
                                            <i class="fas fa-download"></i> Download
                                        </button>
                                        @if (!report.IsArchived)
                                        {
                                            <button class="btn btn-warning btn-sm archive-btn"
                                                    data-report-id="@report.ReportId">
                                                <i class="fas fa-archive"></i> Archive
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-success btn-sm unarchive-btn"
                                                    data-report-id="@report.ReportId">
                                                <i class="fas fa-box-open"></i> Unarchive
                                            </button>
                                            <button class="btn btn-danger btn-sm delete-btn"
                                                    data-report-id="@report.ReportId">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Archive button click handler
        $(document).on('click', '.archive-btn', function () {
            const reportId = $(this).data('report-id');
            updateArchiveStatus(reportId, true);

        });

        // Unarchive button click handler
        $(document).on('click', '.unarchive-btn', function () {
            const reportId = $(this).data('report-id');
            updateArchiveStatus(reportId, false);

        });

        // Delete button click handler
        $(document).on('click', '.delete-btn', function () {
            const reportId = $(this).data('report-id');
            if (confirm('Are you sure you want to delete this report? This action cannot be undone.')) {
                deleteReport(reportId);

            }
        });

        // Download button click handler
        $(document).on('click', '.download-btn', function () {
            const reportId = $(this).data('report-id');
            const fileName = $(this).data('filename');
            downloadReport(reportId, fileName);
        });

        function updateArchiveStatus(reportId, isArchived) {
            $.ajax({
                url: '@Url.Action("UpdateArchiveStatus", "Chief")',
                type: 'POST',
                data: {
                    reportId: reportId,
                    isArchived: isArchived
                },
                success: function (response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Failed to update archive status. Please try again.');
                    }
                },
                error: function () {
                    alert('An error occurred. Please try again.');
                }
            });
        }

        function deleteReport(reportId) {
            $.ajax({
                url: '@Url.Action("DeleteReport", "Chief")',
                type: 'POST',
                data: {
                    reportId: reportId
                },
                success: function (response) {
                    if (response.success) {
                        location.reload()
                        $(`#report-row-${reportId}`).fadeOut(400, function () {
                            $(this).remove();
                        });
                    } else {
                        alert('Failed to delete report. Please try again.');
                    }
                },
                error: function () {
                    alert('An error occurred. Please try again.');
                }
            });
        }

        function downloadReport(reportId, fileName) {
            $.ajax({
                url: '@Url.Action("DownloadReport", "Chief")',
                type: 'GET',
                data: { reportId: reportId },
                xhrFields: {
                    responseType: 'blob'
                },
                success: function (data, status, xhr) {
                    var blob = new Blob([data], { type: xhr.getResponseHeader('content-type') });
                    var url = window.URL.createObjectURL(blob);
                    var a = document.createElement('a');
                    a.href = url;
                    a.download = fileName;
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                },
                error: function (xhr, status, error) {
                    console.error('Download error:', error);
                    alert('Failed to download the report. Please try again.');
                }
            });
        }
    });
</script>

<script>
    $(document).ready(function () {
        $('#reportType').on('change', function () {
            let reportType = $(this).val();

            $('#yearContainer').hide();
            $('#eventContainer').hide();

            if (reportType === 'List of New Partners' || reportType === 'List of Renewal Contracts' || reportType === 'List of Events') {
                $('#yearContainer').show();
            }

            if (reportType === 'List of Attendees') {
                $('#eventContainer').show();
            }
        });

        $('#reportForm').on('submit', function (event) {
            event.preventDefault();

            var fileName = $('#fileName').val();
            var reportType = $('#reportType').val();
            var year = $('#year').val();
            var eventId = $('#eventId').val();

            if (!fileName || !reportType ||
                (reportType === 'List of New Partners' || reportType === 'List of Renewal Contracts' || reportType === 'List of Events') && !year ||
                (reportType === 'List of Attendees' && !eventId)) {
                alert("Please fill out all required fields.");
                return;
            }

            $('.loading-spinner, .spinner-backdrop').show();

            var formData = new FormData();
            formData.append('fileName', fileName);
            formData.append('reportType', reportType);

            if (reportType === 'List of New Partners' || reportType === 'List of Renewal Contracts' || reportType === 'List of Events') {
                formData.append('year', year);
            } else if (reportType === 'List of Attendees') {
                formData.append('researchEventId', eventId);
            }

            $.ajax({
                url: '/CrdlSys/Chief/GenerateReport',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                xhrFields: { responseType: 'blob' },
                success: function (blob) {
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    link.download = fileName + '.xlsx';

                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                    window.URL.revokeObjectURL(link.href);

                    $('.loading-spinner, .spinner-backdrop').hide();
                    location.reload();
                },
                error: function (xhr, status, error) {
                    console.error("Error generating report:", error);
                    alert("An error occurred while generating the report. Please try again.");
                    $('.loading-spinner, .spinner-backdrop').hide();
                }
            });
        });
    });
</script>



