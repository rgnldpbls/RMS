// <auto-generated />
using System;
using CrdlSys.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ResearchManagementSystem.Migrations.CrdlDb
{
    [DbContext(typeof(CrdlDbContext))]
    partial class CrdlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CrdlSys.Models.ChiefUpload", b =>
                {
                    b.Property<string>("DocumentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("ContractEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ContractStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("DocumentFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EmailOfStakeholder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManuallyUnarchived")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastNotificationSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StakeholderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentId");

                    b.ToTable("CRDL_ChiefUpload");
                });

            modelBuilder.Entity("CrdlSys.Models.DocumentTracking", b =>
                {
                    b.Property<string>("TrackingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsReceivedByOVPRED")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsReceivedByOVPREDUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReceivedByRMO")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReceivedByRMOAfterOVPRED")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsReceivedByRMOAfterOVPREDUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReceivedByRMOAfterOfficeOfThePresident")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsReceivedByRMOAfterOfficeOfThePresidentUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsReceivedByRMOUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSubmittedToLegalOffice")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsSubmittedToLegalOfficeUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSubmittedToOVPRED")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsSubmittedToOVPREDUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSubmittedToOfficeOfThePresident")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsSubmittedToOfficeOfThePresidentUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TrackingId");

                    b.HasIndex("DocumentId");

                    b.ToTable("CRDL_DocumentTracking");
                });

            modelBuilder.Entity("CrdlSys.Models.GeneratedReport", b =>
                {
                    b.Property<string>("ReportId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("GenerateReportFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("ResearchEventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeOfReport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("ResearchEventId");

                    b.ToTable("CRDL_GeneratedReport");
                });

            modelBuilder.Entity("CrdlSys.Models.GeneratedSentimentAnalysis", b =>
                {
                    b.Property<string>("SentimentAnalysisId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("GenerateReportFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("ResearchEventId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("SurveyFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("SentimentAnalysisId");

                    b.HasIndex("ResearchEventId");

                    b.ToTable("CRDL_GeneratedSentimentAnalysis");
                });

            modelBuilder.Entity("CrdlSys.Models.RenewalHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("NewEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PreviousEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("RenewalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeOfDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("CRDL_RenewalHistory");
                });

            modelBuilder.Entity("CrdlSys.Models.ResearchEvent", b =>
                {
                    b.Property<string>("ResearchEventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("EventThumbnail")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<int>("ParticipantsCount")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantsSlot")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDeadline")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegistrationOpen")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ResearchEventId");

                    b.ToTable("CRDL_ResearchEvent");
                });

            modelBuilder.Entity("CrdlSys.Models.ResearchEventInvitation", b =>
                {
                    b.Property<string>("InvitationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InvitationStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("InvitedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResearchEventId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvitationId");

                    b.HasIndex("ResearchEventId");

                    b.ToTable("CRDL_ResearchEventInvitation");
                });

            modelBuilder.Entity("CrdlSys.Models.ResearchEventRegistration", b =>
                {
                    b.Property<string>("RegistrationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastNotificationSent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResearchEventId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegistrationId");

                    b.HasIndex("ResearchEventId");

                    b.ToTable("CRDL_ResearchEventRegistration");
                });

            modelBuilder.Entity("CrdlSys.Models.StakeholderUpload", b =>
                {
                    b.Property<string>("DocumentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("ContractEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ContractStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("DocumentFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManuallyUnarchived")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastNotificationSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StakeholdeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StakeholderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StakeholderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfMOA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentId");

                    b.ToTable("CRDL_StakeholderUpload");
                });

            modelBuilder.Entity("CrdlSys.Models.DocumentTracking", b =>
                {
                    b.HasOne("CrdlSys.Models.StakeholderUpload", "StakeholderUpload")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StakeholderUpload");
                });

            modelBuilder.Entity("CrdlSys.Models.GeneratedReport", b =>
                {
                    b.HasOne("CrdlSys.Models.ResearchEvent", "ResearchEvent")
                        .WithMany()
                        .HasForeignKey("ResearchEventId");

                    b.Navigation("ResearchEvent");
                });

            modelBuilder.Entity("CrdlSys.Models.GeneratedSentimentAnalysis", b =>
                {
                    b.HasOne("CrdlSys.Models.ResearchEvent", "ResearchEvent")
                        .WithMany()
                        .HasForeignKey("ResearchEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResearchEvent");
                });

            modelBuilder.Entity("CrdlSys.Models.RenewalHistory", b =>
                {
                    b.HasOne("CrdlSys.Models.StakeholderUpload", "StakeholderUpload")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StakeholderUpload");
                });

            modelBuilder.Entity("CrdlSys.Models.ResearchEventInvitation", b =>
                {
                    b.HasOne("CrdlSys.Models.ResearchEvent", "ResearchEvent")
                        .WithMany()
                        .HasForeignKey("ResearchEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResearchEvent");
                });

            modelBuilder.Entity("CrdlSys.Models.ResearchEventRegistration", b =>
                {
                    b.HasOne("CrdlSys.Models.ResearchEvent", "ResearchEvent")
                        .WithMany()
                        .HasForeignKey("ResearchEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResearchEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
